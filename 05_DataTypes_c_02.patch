6 Data Types
---------------------------------



	Whay we write Program?
		Program is Process of Data

	Data-:	
		Constant
		Variable
	
	char 1 byte
		Constant
		Variable

		'a' 'A' '3','@'

	integer -: 4byte
		Constant --
			123 	0x123	 0123
 			Dec     Hex      OCTAL
		Variable
		
	float 4 -: bytes
		Constant -- 1.35f 5.00f -9.65f
		Variable
	double
		Constant 1.355555f, 5.0002222f,
		Variable

 	String constant 
		"Hello" ,"1234" ,"1@23", "1"	


    Basic Syntax : Datatype variableName;

     variable name-:
   		      a......z
		      A......Z
		      0......9
		       _ underscore
		Note-1st letter should not be digit

  
Char Constant-:
	


Integer Constant
	Decimale Number
	Octal Number - 0 1 2 3 4 5 6 7 10 12 13 14
	Hexadecimal Number - 0 1 2 3 4 5 6 7 8 9 A B C D E F
	Binary Number 1, 01, 10, 11,100,101,110,111..................
	

128  64    32    16   	8 	 4 	2 	 1 
2^7  2^6  2^5   2^4    2^3 	2^2	2^1 	2^0 			     	
0    0     0     0   	0 	  0 	0 	 1 -: 1   
====================================================================================
1    1    1     1       1         1     1        0

		    
====================================================================================	
0    1    1     0       0         1     0        0   = 0x64 =Hexa


0    0    0     0       1         1     0        0   = 0x0C =Hexa
0    0    0     0       1         1     0        0   = 0x14 =octol
0    0    0     0       1         1     0        0   = 12 =decimal
0    0    0     0       1         1     0        0   = Binary


Float Constant
	
	1.3f , 5.000f, -9.6f

Float Constant
	
	1.300000000000 , 5.000000000000, -9.6000000000000


Variable:

	"Basic Syntax : Datatype Varibalename"


	Varibale name -: a-z, A-Z , 0-9(1st char must), space not allowed

	int num; 	-> correct
	int no1; 	-> correct
	int 1num; 	-> Non correct
	char 2num; 	-> Noncorrect
	flot f@1;	-> notcorrect
	float f 1;      -> Non correct
		float f 1;
			float f ; CORRECT
			    1 ; its int constant?
		float f _1; //Correct	


	float f_1;	-> correct
	float f,n1;	-> correct



Statment:
	in a c program, instruction are written in form of statements
	
	1.Expression statement
		x=5;
		y=x-1;
	2.Compound statement
		int l=4, b=5,h=6;
		int area, volume;
		area=2(l*b+b*h+h*1);

	3.Selection Statement
		if else
		elseif
		switch
	4.Iterative Statement
		While , do while, for
	5.Jump statement
		goto, continue, break,return
	6.Label Statement
		case, default,label statemnt used in goto	
	
	
Install Linux in dual boot
1. ISO file (Ubantu)
2. Bootable ISO file(rufuz application)
3. poweroff and resrart with bootable pendrive attach
4  option for boot(usb drive boot)
5 Installation -: You can do video call





---------------------------------------------------------------------------------------------



Excersise -:
	Note-1st letter should not be digit in Variable name --: why?


char 


How number is stored in integer?

How 100 will be stored ;

char - 1 byte 
 
0000 0001 -1
0000 0010 -2
0000 0011 -3

value 100

char ch=
104
-64   64
------
 40
-32   32
-------
 8
-8    8
-----
 0

0000 0000
0110 1000 =104 binary

char ch=101;
-----------------------
HEX
0000 0000
0110 1000 =104 binary

4 bits 

8421 8421
0110 1000 =0x68

char ch=0x68;
-------------------------

Octal
3 bit binary

0000 0000
00 000 000
 char ch=0000


0110 1000 =104 binary
421  421 421
 01  101 000
 1    5   0
3 bits 

char ch=0150; //Octal
-------------------------

Self Study Start 

128  64    32    16   	8 	 4 	2 	 1 
2^7  2^6  2^5   2^4    2^3 	2^2	2^1 	2^0 			     	
0    0     0     0   	0 	  0 	0 	 1 -: 1   
====================================================================================
1    1    1     1       1         1     1        0

		    
====================================================================================	
0    1    1     0       0         1     0        0   = 0x64 =Hexa


0    0    0     0       1         1     0        0   = 0x0C =Hexa
0    0    0     0       1         1     0        0   = 0x14 =octol
0    0    0     0       1         1     0        0   = 12 =decimal
0    0    0     0       1         1     0        0   = Binary

Self Study End
---------------------------------------------------------------------------------------------

 how Negative number will stored

-56 and 200
-----------------------------------------------------------------------------

char - 1 byte
0000 0000 

signed char ch=200; (by default it will signed)
signed char ch=-56; (by default it will signed)

unsigned char ch=200; (by default it will signed)
unsigned char ch=-56; (by default it will signed)

	
2 points
 unsigned char ch  =2nd
 -56 =1st

0000 0000 
stored in 2's compliment method
1. Absolute value of negative number |-56| -: 56

2. take once omplement (inverts the bits)
3. Add 1
-------------------------------------
 56
-32  32   1
----------
 24
-16  16  1
---------
  8
- 8  8  1
-----------
  0

56 -: 0011 1000 
1's -:1100 0111
add   0000 0001
      
---------------------------
res   1100 1000 = -56 //Stored in memory



   8
+ 64
+128
-----------
 200
 
unsigned char ch=-56;  (by default it will signed)
unsigned char ch=200; (by default it will signed)




128  64   32    16   	8 	 4 	2 	 1 
2^7  2^6  2^5   2^4    2^3 	2^2	2^1 	2^0 			     	
7    6     5     4   	3 	  2 	1 	 0 -: 1   
====================================================================================

0    0    1     1       1         0     0        0   = 56 
once compliment

1    1    0     0       0         1     1        1   = once compliment of 56
+

--------------------------------------------------------------------------
			1	  1	1
1    1    0     0       0         1     1        1   = once compliment of 56
|
0    0    0     0       0         0     0        1   = 0x01 =01
------------------------------------------------------------------
1    1    0     0       1         0     0        0   = -56 in signed and 200 in unsigend










++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=
Excersise -:
	Note-1st letter should not be digit in Variable name --: why?
	
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++























	




